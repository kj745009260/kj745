arr.push(1,2,3)  向数组的尾部追加元素，并返回新数组的长度
arr.pop()        从数组的尾部移除一个元素，并返回移除的元素
arr.shift()      从数组的头部移除一个元素，并返回移除的元素
arr.unshift(1,2) 向数组的头部插入多个元素，并返回新数组的长度

arr.splice(起始位置,截取即去掉元素长度,追加的新元素之后都是)  操作数组本身
arr.slice(2,4) 截取范围(左闭右开区间) 返回截取的内容  不操作数组本身

arr.concat(arr1) 返回合并的数组，不操作数组本身
arr.join('*')   返回插入*的字符串，不操作数组本身

arr.reverse() 反转数组 操作数组本身
arr.sort() 排序 操作数组本身

function compare(v1,v2){ 此为正序
  if(v1<v2){
    return -1;
  }else if(v1>v2){
    return 1;
  }else{
    return 0;
  }
}
arr.sort(compare);

arr.indexOf(num) 返回num在数组中的索引位置，没找到返回-1
arr.indexOf(num1,num2) 从num1的位置开始查询，返回num2的索引位置，没找到返回-1
arr.lastIndexOf() 从数组后面向前查找

arr.every(function(item,index,array){ //[数组元素，数组下标，数组]
  return item > 2;
})
如果数组的每一项都>2则返回true,有一项不满足则返回false。

arr.some(function(item,index,array){
  return item > 2;
})
如果数组中有一个>2就返回true，全部不满足则返回false

arr.filter(function(item,index,array){
  return item > 2;
})
过滤元素，返回数组中>2的元素,返回数组对象

arr.forEach(function(item,index,array){
})
循环操作数组中的每一个元素

arr.map(function(item,index,array){
  return item>2;
})
对数组的每一项操作，返回新数组

arr.reduce(function(prev,cur,index,array){//[前一个值，当前值，当前索引，数组]
  return prev+cur;
})
从数组头部开始遍历

arr.reduce(function(prev,cur,index,array){//[前一个值，当前值，当前索引，数组]
  return prev+cur;
})
从数组尾部开始遍历